readquery <- function()
{ 
prompt <- "Digite a consulta: "
  n <- readline(prompt)
  n <- (unlist(strsplit(n, "\\s+")))
  return(n)
}

consulta<- function() {
rq<-tolower(readquery())
df<- data.frame( Termo=character())
for (i in 1:length(rq)){
	t1 <-rq[i]
	i1 <-(as.numeric(as.character(item1[item1$Termos==t1,c('idf')])))
	tempdf <- data.frame(t1,i1,stringsAsFactors=FALSE)
	colnames(tempdf)<-c("Termo","idf")
	df<-merge(df,tempdf, by=intersect(names(df),names(tempdf)), all=T)
}
return(df)
}

query <-consulta()

########### PARTE EM IMPLEMENTACAO
# Inicializo uma variavle e defino nome da coluna/doc a ser lido
similaridade <- 0
documento <- paste( 'Doc',i, sep="" )
#####Obtenho o tf do doc em questao
tfdoc=(as.numeric(as.character(item5[item5$Termos==t1,c(documento)])))
### Similaridade daquele doc eh o produto do idf com o tf no doc
similaridade <- similaridade + (i1*tfdoc)
#### falta guardar esse valor para o doc atual e repetir o processo com os outros
#### Tendo todos esses valores, listar os 10+ com nome do documento e a similaridade com a query.


####HEY!!! Se a conta for SOMATORIO(TF x Idf), então já temos isso
###### DO ITEM 5! É só selecionar os valores e somar.
